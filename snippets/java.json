{
	"@Attribute": {
		"prefix": ["attribute"],
		"body": [
			"@Attribute",
			"public ${1|String,Integer|} $2()",
			"{",
			"\t$1 ret = $3",
			"\treturn (ret);",
			"}",
			"",
			""
		]
	},

	"Coverage": {
		"prefix": ["coverage"],
		"body": [
			"package client.mappings.application.line.risk.coverage;",
			"",
			"import com.its.idmp.migration.annotation.Attribute;",
			"import com.its.idmp.migration.annotation.TargetName;",
			"",
			"import client.mappings.RiskMapping;",
			"import client.mappings.application.line.risk.DTORisk;",
			"",
			"@TargetName(\"DTOCoverage\")",
			"public class $TM_FILENAME_BASE extends RiskMapping",
			"{",
			"\tpublic static void addTo(DTORisk risk)",
			"\t{",
			"\t\tif (risk.isPolicy() && $2)",
			"\t\t\trisk.add($TM_FILENAME_BASE.class);",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String CoverageCd()",
			"\t{",
			"\t\treturn \"$TM_FILENAME_BASE\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String Description()",
			"\t{",
			"\t\treturn ${1/t = //};",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String Status()",
			"\t{",
			"\t\treturn \"Active\";",
			"\t}",
			"}"
		]
	},

	"Coverage Addr": {
		"prefix": ["cov-addr"],
		"body": [
			"public static class Addr extends RiskMapping",
			"{",
			"\tpublic static void addTo($1 coverage)",
			"\t{",
			"\t\tcoverage.add(Addr.class);",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String Addr1()",
			"\t{",
			"\t\treturn \"$2\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String Addr2()",
			"\t{",
			"\t\treturn \"$3\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String AddrTypeCd()",
			"\t{",
			"\t\treturn \"$4\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String City()",
			"\t{",
			"\t\treturn \"$5\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String PostalCode()",
			"\t{",
			"\t\treturn \"$6\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String StateProvCd()",
			"\t{",
			"\t\treturn \"$27\";",
			"\t}",
			"}",
			""
		]
	},

	"DTOCoverageItem": {
		"prefix": ["cov-item"],
		"body": [
			"public static class DTOCoverageItem extends RiskMapping",
			"{",
			"\tpublic static void addTo($1 coverage)",
			"\t{",
			"\t\tcoverage.add(DTOCoverageItem.class);",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String CoverageItemCd()",
			"\t{",
			"\t\treturn ${2/t = //};",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic Integer SequenceNumber()",
			"\t{",
			"\t\tint ret = this.siblingNumber();",
			"\t\treturn (ret);",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String Status()",
			"\t{",
			"\t\treturn \"Active\";",
			"\t}",
			"}",
			""
		]
	},

	"DTOLimit": {
		"prefix": ["limit"],
		"body": [
			"public static class DTOLimit extends RiskMapping",
			"{",
			"\tpublic static void addTo($1 coverage)",
			"\t{",
			"\t\tcoverage.add(DTOLimit.class);",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String LimitCd()",
			"\t{",
			"\t\treturn \"Limit1\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic Integer Value()",
			"\t{",
			"\t\tInteger ret = $2",
			"\t\treturn (ret);",
			"\t}",
			"}",
			"",
			""
		]
	},

	"DTODeductible": {
		"prefix": ["deductible"],
		"body": [
			"public static class DTODeductible extends RiskMapping",
			"{",
			"\tpublic static void addTo($1 coverage)",
			"\t{",
			"\t\tcoverage.add(DTODeductible.class);",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic String DeductibleCd()",
			"\t{",
			"\t\treturn \"Deductible1\";",
			"\t}",
			"",
			"",
			"\t@Attribute",
			"\tpublic Integer Value()",
			"\t{",
			"\t\tInteger ret = $2",
			"\t\treturn (ret);",
			"\t}",
			"}",
			"",
			""
		]
	},

	"SequenceNumber": {
		"prefix": ["sequence-number"],
		"body": [
			"@Attribute",
			"public Integer SequenceNumber()",
			"{",
			"\tint ret = this.siblingNumber();",
			"\treturn (ret);",
			"}",
			"",
			""
		],
	},

	"_Setup": {
		"prefix": ["setup"],
		"body": [
			"public void _setup()",
			"{",
			"\t$1",
			"}",
			"",
			""
		]
	},

	"_Subnodes": {
		"prefix": ["subnodes"],
		"body": [
			"public void _subnodes()",
			"{",
			"\tthis.register($1.class);",
			"}",
			"",
			""
		]
	},

	"Source Get": {
		"prefix": ["this-source"],
		"body": "this.source(${1/t = (s_)?//}).$2(null);"
	}
}
